print(df)
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
library(extrafont)
library(RColorBrewer)
# setwd("/Users/catherineparnell/alito-research")
df <- read.csv("AlitoDataset.csv")
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
library(extrafont)
library(RColorBrewer)
setwd("/Users/catherineparnell/alito-research")
df <- read.csv("AlitoDataset.csv")
df <- df %>%
mutate(Roberts = if_else(str_detect(Majority, "Roberts"), 1,
if_else(str_detect(Dissent, "Roberts"), 0, 2))) %>%
mutate(Stevens = if_else(str_detect(Majority, "Stevens"), 1,
if_else(str_detect(Dissent, "Stevens"), 0, 2))) %>%
mutate(Scalia = if_else(str_detect(Majority, "Scalia"), 1,
if_else(str_detect(Dissent, "Scalia"), 0, 2))) %>%
mutate(Kennedy = if_else(str_detect(Majority, "Kennedy"), 1,
if_else(str_detect(Dissent, "Kennedy"), 0, 2))) %>%
mutate(Souter = if_else(str_detect(Majority, "Souter"), 1,
if_else(str_detect(Dissent, "Souter"), 0, 2))) %>%
mutate(Thomas = if_else(str_detect(Majority, "Thomas"), 1,
if_else(str_detect(Dissent, "Thomas"), 0, 2))) %>%
mutate(Ginsburg = if_else(str_detect(Majority, "Ginsburg"), 1,
if_else(str_detect(Dissent, "Ginsburg"), 0, 2))) %>%
mutate(Breyer = if_else(str_detect(Majority, "Breyer"), 1,
if_else(str_detect(Dissent, "Breyer"), 0, 2))) %>%
mutate(Sotomayor = if_else(str_detect(Majority, "Sotomayor"), 1,
if_else(str_detect(Dissent, "Sotomayor"), 0, 2))) %>%
mutate(Kagan = if_else(str_detect(Majority, "Kagan"), 1,
if_else(str_detect(Dissent, "Kagan"), 0, 2))) %>%
mutate(Gorsuch = if_else(str_detect(Majority, "Gorsuch"), 1,
if_else(str_detect(Dissent, "Gorsuch"), 0, 2)))
df$Characterized.Answer
# creates answer flag and splits answers when 2
df <- df %>%
separate(Characterized.Answer, c("Answer1", "Answer2"), sep=",", fill="right") %>%
mutate(AnswerFlag1 = case_when(
str_detect(Answer1, "Yes")~1,
str_detect(Answer1, "No")~0,
TRUE~2
)) %>%
mutate(AnswerFlag2 = case_when(
str_detect(Answer2, "Yes")~1,
str_detect(Answer2, "No")~0,
TRUE~2
))
# puts color total for each case in according column
df <- df %>%
mutate(Pink = I.Count.Pink + MA1.Count.Pink + R.Count.Pink + C.Count.Pink) %>%
mutate(Green = I.Count.Green + MA1.Count.Green + R.Count.Green + C.Count.Green) %>%
mutate(Blue = I.Count.Blue + MA1.Count.Blue + R.Count.Blue + C.Count.Blue) %>%
mutate(Orange = I.Count.Orange + MA1.Count.Orange + R.Count.Orange + C.Count.Orange) %>%
mutate(Purple = I.Count.Purple + MA1.Count.Purple + R.Count.Purple + C.Count.Purple) %>%
mutate(Yellow = I.Count.Yellow + MA1.Count.Yellow + R.Count.Yellow + C.Count.Yellow)
df
colors_totals <- df %>%
summarize(Pinktot = sum(Pink, na.rm=TRUE), Greentot = sum(Green, na.rm=TRUE), Bluetot = sum(Blue, na.rm = TRUE), Orangetot = sum(Orange, na.rm = TRUE), Purpletot = sum(Purple, na.rm=TRUE), Yellowtot = sum(Yellow, na.rm=TRUE)) %>%
gather(key="Color", value="Count") %>%
mutate(Color = fct_relevel(Color, c("Greentot", "Pinktot", "Yellowtot", "Orangetot", "Purpletot", "Bluetot")))
colors_totals
df
pink_mean = mean(df$Pink)
green_mean = mean(df$Green)
blue_mean = mean(df$Blue)
orange_mean = mean(df$Orange)
purple_mean = mean(df$Purple)
yellow_mean = mean(df$Yellow)
oinl_mean
pink_eman
pink_mean
green_mean
pink_mean = mean(df$Pink, na.rm = TRUE)
green_mean = mean(df$Green, na.rm = TRUE)
blue_mean = mean(df$Blue, na.rm = TRUE)
orange_mean = mean(df$Orange, na.rm = TRUE)
purple_mean = mean(df$Purple, na.rm = TRUE)
yellow_mean = mean(df$Yellow, na.rm = TRUE)
pink_mean
green_mean
ggplot(colors_totals, aes(x = Color, y=Count, fill = Color)) + geom_bar(stat="identity") +
labs(title="Sum of colors used overall",
x="Color",
y="Count") + theme_classic() + scale_fill_manual(values = c("#23A635", "#DC31D7", "#DCD431", "#DC8731", "#8E2BC5", "#2B5EC5")) +
theme(
text = element_text(family="Times New Roman")
)
df <- df %>%
mutate(PinkNorm = (I.Count.Pink + MA1.Count.Pink + R.Count.Pink + C.Count.Pink) / Opinion.Length) %>%
mutate(GreenNorm = (I.Count.Green + MA1.Count.Green + R.Count.Green + C.Count.Green) / Opinion.Length) %>%
mutate(BlueNorm = (I.Count.Blue + MA1.Count.Blue + R.Count.Blue + C.Count.Blue) / Opinion.Length) %>%
mutate(OrangeNorm = (I.Count.Orange + MA1.Count.Orange + R.Count.Orange + C.Count.Orange) / Opinion.Length) %>%
mutate(PurpleNorm = (I.Count.Purple + MA1.Count.Purple + R.Count.Purple + C.Count.Purple) / Opinion.Length) %>%
mutate(YellowNorm = (I.Count.Yellow + MA1.Count.Yellow + R.Count.Yellow + C.Count.Yellow) / Opinion.Length)
df
df
pink_norm_mean = mean(df$PinkNorm, na.rm = TRUE)
green_norm_mean = mean(df$GreenNorm, na.rm = TRUE)
blue_norm_mean = mean(df$BlueNorm, na.rm = TRUE)
orange_norm_mean = mean(df$OrangeNorm, na.rm = TRUE)
purple_norm_mean = mean(df$PurpleNorm, na.rm = TRUE)
yellow_norm_mean = mean(df$YellowNorm, na.rm = TRUE)
t.test(green_mean, pink_mean)
t.test(df$Pink, df$Green)
pinkVgreen = t.test(df$Pink, df$Green)
pinkNormVgreenNorm = t.test(df$PinkNorm, df$GreenNorm)
blueVgreen = t.test(df$Blue, df$Green)
blueNormVgreenNorm = t.test(df$BlueNorm, df$GreenNorm)
blueVgreen
blueNormVgreenNorm
pinkVgreen = t.test(df$Pink[df$Answer1 = 'Yes'], df$Green[df$Answer1 = 'Yes'])
pinkNormVgreenNorm = t.test(df$PinkNorm[df$Answer1 = 'Yes'], df$GreenNorm[df$Answer1 = 'Yes'])
pinkVgreen = t.test(df$Pink[df$Answer1 == 'Yes'], df$Green[df$Answer1 == 'Yes'])
pinkNormVgreenNorm = t.test(df$PinkNorm[df$Answer1 == 'Yes'], df$GreenNorm[df$Answer1 == 'Yes'])
pinkVgreen = t.test(df$Pink, df$Green)
pinkNormVgreenNorm = t.test(df$PinkNorm, df$GreenNorm)
pinkVgreenYes = t.test(df$Pink[df$Answer1 == 'Yes'], df$Green[df$Answer1 == 'Yes'])
pinkNormVgreenNormYes = t.test(df$PinkNorm[df$Answer1 == 'Yes'], df$GreenNorm[df$Answer1 == 'Yes'])
pinkVgreenYes
pinkNormVgreenNormYes
pinkVgreenNo = t.test(df$Pink[df$Answer1 == 'No'], df$Green[df$Answer1 == 'No'])
pinkNormVgreenNormNo = t.test(df$PinkNorm[df$Answer1 == 'No'], df$GreenNorm[df$Answer1 == 'No'])
pinkVgreenNo
pinkNormVgreenNormNo
blueVgreenYes = t.test(df$Blue[df$Answer1 = 'Yes'], df$Green[df$Answer1 = 'Yes'])
blueNormVgreenNormYes = t.test(df$BlueNorm[df$Answer1 = 'Yes'], df$GreenNorm[df$Answer1 = 'Yes'])
blueVgreenYes = t.test(df$Blue[df$Answer1 == 'Yes'], df$Green[df$Answer1 == 'Yes'])
blueNormVgreenNormYes = t.test(df$BlueNorm[df$Answer1 == 'Yes'], df$GreenNorm[df$Answer1 == 'Yes'])
blueVgreenYes
blueVgreenYes = t.test(df$Blue[df$Answer1 == 'Yes'], df$Green[df$Answer1 == 'Yes'])
blueNormVgreenNormYes = t.test(df$BlueNorm[df$Answer1 == 'Yes'], df$GreenNorm[df$Answer1 == 'Yes'])
blueNormVgreenNormYes
blueVgreenNo = t.test(df$Blue[df$Answer1 == 'No'], df$Green[df$Answer1 == 'No'])
blueNormVgreenNormNo = t.test(df$BlueNorm[df$Answer1 == 'No'], df$GreenNorm[df$Answer1 == 'No'])
blueVgreenNo
blueNormVgreenNormNo
pinkVgreenSplit = t.test(df$Pink[df$Vote.Split == 1], df$Green[df$Vote.Split == 1])
pinkNormVgreenNormSplit = t.test(df$PinkNorm[df$Vote.Split == 1], df$GreenNorm[df$Vote.Split == 1])
pinkVgreenSplit
pinkVgreenMaj = t.test(df$Pink[df$Vote.Split == 0], df$Green[df$Vote.Split == 0])
pinkNormVgreenNormMaj= t.test(df$PinkNorm[df$Vote.Split == 0], df$GreenNorm[df$Vote.Split == 0])
pinkNormVgreenNormSplit
pinkNormVgreenNormMaj
pinkVgreenMaj
blueVgreenSplit = t.test(df$Blue[df$Vote.Split == 1], df$Green[df$Vote.Split == 1])
blueNormVgreenNormSplit = t.test(df$BlueNorm[df$Vote.Split == 1], df$GreenNorm[df$Vote.Split == 1])
blueVgreenMaj = t.test(df$Blue[df$Vote.Split == 0], df$Green[df$Vote.Split == 0])
blueNormVgreenNormMaj = t.test(df$BlueNorm[df$Vote.Split == 0], df$GreenNorm[df$Vote.Split == 0])
blueVgreenSplit
blueVgreenMaj
blueNormVgreenNormMaj
blueNormVgreenNormSplit
greenVgreenYes =  t.test(df$Green, df$Green[df$Answer1 == 'Yes'])
greenVgreenNo = t.test(df$Green, df$Green[df$Answer1 == 'No'])
greenVgreenSplit = t.test(df$Green, df$Green[df$Vote.Split == 1])
greenVgreenMaj = t.test(df$Green, df$Green[df$Vote.Split == 0])
greenVgreenYesNorm =  t.test(df$GreenNorm, df$GreenNorm[df$Answer1 == 'Yes'])
greenVgreenNoNorm = t.test(df$GreenNorm, df$GreenNorm[df$Answer1 == 'No'])
greenVgreenSplitNorm = t.test(df$GreenNorm, df$GreenNorm[df$Vote.Split == 1])
greenVgreenMajNorm = t.test(df$GreenNorm, df$GreenNorm[df$Vote.Split == 0])
greenVgreenMaj
greenVgreenSplit
greenVgreenYes
greenVgreenNo
greenVgreenNoNorm
greenVgreenYesNorm
greenVgreenSplitNorm
greenVgreenMajNorm
blueVblueYes =  t.test(df$Blue, df$Blue[df$Answer1 == 'Yes'])
blueVblueYesNorm =  t.test(df$BlueNorm, df$BlueNorm[df$Answer1 == 'Yes'])
blueVblueNo = t.test(df$Blue, df$Blue[df$Answer1 == 'No'])
blueVblueNoNorm = t.test(df$BlueNorm, df$BlueNorm[df$Answer1 == 'No'])
blueVblueSplit = t.test(df$Blue, df$Blue[df$Vote.Split == 1])
blueVblueSplitNorm = t.test(df$BlueNorm, df$BlueNorm[df$Vote.Split == 1])
blueVblueMaj = t.test(df$Blue, df$Blue[df$Vote.Split == 0])
blueVblueMajNorm = t.test(df$BlueNorm, df$BlueNorm[df$Vote.Split == 0])
blueVblueYes
blueVblueYesNorm
blueVblueNo
blueVblueNoNorm
blueVblueSplit
blueVblueSplitN
blueVblueSplitNorm
blueVblueMaj
blueVblueMajNorm
